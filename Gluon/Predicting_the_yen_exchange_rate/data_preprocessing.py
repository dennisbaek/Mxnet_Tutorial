# -*- coding: utf-8 -*-import mxnet as mximport numpy as npimport pandas as pdclass JPY_to_KRW(mx.gluon.data.Dataset):    def __init__(self,train=True,time_step=100,day=1, normalization_factor=100):        self.train=train        self.time_step=time_step        self.day=day        self.normalization_factor = normalization_factor        self._data_preprocessing()    def __repr__(self):        return "'JPY_to_KRW'"    def __getitem__(self, idx):        return self._data[idx] , self._label[idx]    def __len__(self):        return len(self._data)    def _data_preprocessing(self):        #JPY data        data = pd.read_excel("datasets/jpy.xls")        # change the type of data to numpy        data = np.asarray(data)        data = data[:,-1:]        data = np.reshape(data,(-1,self.day))        data = data / self.normalization_factor        if self.train:            self._data = data[:len(data)-self.time_step].astype(np.float32)            self._label = data[self.time_step:].astype(np.float32)        else:            self._data = data[len(data)-self.time_step:].astype(np.float32)            self._label = np.zeros(np.shape(self._data)).astype(np.float32) # __getitem__' is required for proper operation. (It should be the same size as 'self._data' above.)if __name__=="__main__":    print(JPY_to_KRW())else:    print("JPY Dataset imported")